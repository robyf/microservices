plugins {
    id 'io.spring.dependency-management' version '1.0.10.RELEASE' apply false
    id 'io.franzbecker.gradle-lombok' version '4.0.0' apply false
    id 'org.sonarqube' version '3.0'
    id 'maven-publish'
    id 'jacoco'
}

description = "Microservices Build"

defaultTasks 'build'

allprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'io.franzbecker.gradle-lombok'
//    apply plugin: 'org.sonarqube'
    apply plugin: 'maven-publish'
    apply plugin: 'jacoco'

    group "net.robyf.ms"
    version "${version}"

    repositories {
        jcenter()
        maven {
            url = "/Users/roberto/work/microservices/repo"
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    publishing {
        repositories {
            maven {
                url = System.getenv("MICROSERVICES_REPO_PATH")
            }
        }
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, "minutes"
    }
}


task codeCoverageReport(type: JacocoReport) {
    // Gather execution data from all subprojects
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
/*
    // Add all relevant sourcesets from the subprojects
    subprojects.each {
        sourceSets it.sourceSets.main
    }
*/
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

// always run the tests before generating the report
/*
project.tasks.codeCoverageReport.dependsOn {
    project.tasks.test
}
*/
project.tasks.sonarqube.dependsOn {
    project.tasks.codeCoverageReport
}

sonarqube {
    properties {
        property "sonar.verbose", true
        property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
    }
}